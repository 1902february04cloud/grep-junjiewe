Question #1
-comment: The ^ will allow us to get the first letter of the word, add Z to 
	  specify The letter Z
-command: grep -"^Z" cities.txt

Question #2
-comment: metion the search condition first('gan'), then add $ at the end to 
	  look at the end of the word 
-command: grep -"gan$" cities.txt

Question #3
-comment: flag -c means count of result, [ADE] check matching character A or D 
or E, ^ gives the matching word that starts at the first letter
-command: grep -c "^[ADE]" cities.txt

Question #4
-comment: flag -c will count the match result, "\<" search the BEGGINIG of each
WORD, '.' will take up first char of the searching, '.ar' will then be in the 
second and third position respectively. 
-command: grep -c "\<.ar" cities.txt (for getting the number of cities matched)
	  grep -i "\<.ar" cities.txt (for getting the list of the cities mathed)

Question #5
-comment: flag -c will count the match result, first ^ will check the beggining
of each line, [^C] will return all the lines that does not start with the letterC. 
-command: grep -c ^[^C] cities.txt

Question #6
-comment: -E uses egrep, [[:alpha:]] will give you alphbet, add a - to give 
additional restriction,{14} is the char number that a word should have 
-command:grep -E '^[[:alpha:]-]{14}' cities.txt 

Question #7
-comment: -c count the result of lines start with B
-command: grep -c "^B" cities.txt

Question #8
-comment: -o will separate entries to a new line if there are repeated 'd's in a same line, after that, just count all the 'd's
-command: grep -o [d] cities.txt | grep -c [d] 

Question #9
-comment: (.)\1 give the repeated char that are next to eachother, add $ at the
end to mension end of the word.
-command: grep -E '(.)\1$' cities.txt

Question #10
-comment: ^ start at the beginning of the line, (.)(.)\2\1 will give me a 
palindrome like 'maam', so add a . in the middle to allow a random char to find words with 5 palindrome.  
-command: grep -E '^(.)(.).\2\1>$' cities.txt 
